{"version":3,"file":"origraph.cjs.js","sources":["../src/Common/TriggerableMixin.js","../src/Common/Introspectable.js","../src/Wrappers/GenericWrapper.js","../src/Tables/Table.js","../src/Tables/StaticTable.js","../src/Tables/StaticDictTable.js","../src/Tables/SingleParentMixin.js","../src/Tables/AggregatedTable.js","../src/Tables/ExpandedTable.js","../src/Tables/FacetedTable.js","../src/Tables/TransposedTable.js","../src/Tables/ConnectedTable.js","../src/Classes/GenericClass.js","../src/Wrappers/NodeWrapper.js","../src/Classes/NodeClass.js","../src/Wrappers/EdgeWrapper.js","../src/Classes/EdgeClass.js","../src/Common/NetworkModel.js","../src/Origraph.js","../src/main.js"],"sourcesContent":["const TriggerableMixin = function (superclass) {\n  return class extends superclass {\n    constructor () {\n      super(...arguments);\n      this._instanceOfTriggerableMixin = true;\n      this._eventHandlers = {};\n      this._stickyTriggers = {};\n    }\n    on (eventName, callback, allowDuplicateListeners) {\n      if (!this._eventHandlers[eventName]) {\n        this._eventHandlers[eventName] = [];\n      }\n      if (!allowDuplicateListeners) {\n        if (this._eventHandlers[eventName].indexOf(callback) !== -1) {\n          return;\n        }\n      }\n      this._eventHandlers[eventName].push(callback);\n    }\n    off (eventName, callback) {\n      if (this._eventHandlers[eventName]) {\n        if (!callback) {\n          delete this._eventHandlers[eventName];\n        } else {\n          let index = this._eventHandlers[eventName].indexOf(callback);\n          if (index >= 0) {\n            this._eventHandlers[eventName].splice(index, 1);\n          }\n        }\n      }\n    }\n    trigger (eventName, ...args) {\n      if (this._eventHandlers[eventName]) {\n        this._eventHandlers[eventName].forEach(callback => {\n          setTimeout(() => { // Add timeout to prevent blocking\n            callback.apply(this, args);\n          }, 0);\n        });\n      }\n    }\n    stickyTrigger (eventName, argObj, delay = 10) {\n      this._stickyTriggers[eventName] = this._stickyTriggers[eventName] || { argObj: {} };\n      Object.assign(this._stickyTriggers[eventName].argObj, argObj);\n      clearTimeout(this._stickyTriggers.timeout);\n      this._stickyTriggers.timeout = setTimeout(() => {\n        let argObj = this._stickyTriggers[eventName].argObj;\n        delete this._stickyTriggers[eventName];\n        this.trigger(eventName, argObj);\n      }, delay);\n    }\n  };\n};\nObject.defineProperty(TriggerableMixin, Symbol.hasInstance, {\n  value: i => !!i._instanceOfTriggerableMixin\n});\nexport default TriggerableMixin;\n","class Introspectable {\n  get type () {\n    return this.constructor.type;\n  }\n  get lowerCamelCaseType () {\n    return this.constructor.lowerCamelCaseType;\n  }\n  get humanReadableType () {\n    return this.constructor.humanReadableType;\n  }\n}\nObject.defineProperty(Introspectable, 'type', {\n  // This can / should be overridden by subclasses that follow a common string\n  // pattern, such as RootToken, KeysToken, ParentToken, etc.\n  configurable: true,\n  get () { return this.type; }\n});\nObject.defineProperty(Introspectable, 'lowerCamelCaseType', {\n  get () {\n    const temp = this.type;\n    return temp.replace(/./, temp[0].toLocaleLowerCase());\n  }\n});\nObject.defineProperty(Introspectable, 'humanReadableType', {\n  get () {\n    // CamelCase to Sentence Case\n    return this.type.replace(/([a-z])([A-Z])/g, '$1 $2');\n  }\n});\nexport default Introspectable;\n","import TriggerableMixin from '../Common/TriggerableMixin.js';\nimport Introspectable from '../Common/Introspectable.js';\n\nclass GenericWrapper extends TriggerableMixin(Introspectable) {\n  constructor (options) {\n    super();\n    this.index = options.index;\n    this.table = options.table;\n    if (this.index === undefined || !this.table) {\n      throw new Error(`index and table are required`);\n    }\n    this.classObj = options.classObj || null;\n    this.row = options.row || {};\n    this.connectedItems = options.connectedItems || {};\n  }\n  connectItem (item) {\n    this.connectedItems[item.table.tableId] = this.connectedItems[item.table.tableId] || [];\n    if (this.connectedItems[item.table.tableId].indexOf(item) === -1) {\n      this.connectedItems[item.table.tableId].push(item);\n    }\n  }\n  disconnect () {\n    for (const itemList of Object.values(this.connectedItems)) {\n      for (const item of itemList) {\n        const index = (item.connectedItems[this.table.tableId] || []).indexOf(this);\n        if (index !== -1) {\n          item.connectedItems[this.table.tableId].splice(index, 1);\n        }\n      }\n    }\n    this.connectedItems = {};\n  }\n  async * iterateAcrossConnections ({ tableIds, limit = Infinity }) {\n    // First make sure that all the table caches have been fully built and\n    // connected\n    await Promise.all(tableIds.map(tableId => {\n      return this.classObj._origraph.tables[tableId].buildCache();\n    }));\n    let i = 0;\n    for (const item of this._iterateAcrossConnections(tableIds)) {\n      yield item;\n      i++;\n      if (i >= limit) {\n        return;\n      }\n    }\n  }\n  * _iterateAcrossConnections (tableIds) {\n    if (tableIds.length === 1) {\n      yield * (this.connectedItems[tableIds[0]] || []);\n    } else {\n      const thisTableId = tableIds[0];\n      const remainingTableIds = tableIds.slice(1);\n      for (const item of this.connectedItems[thisTableId] || []) {\n        yield * item._iterateAcrossConnections(remainingTableIds);\n      }\n    }\n  }\n}\nObject.defineProperty(GenericWrapper, 'type', {\n  get () {\n    return /(.*)Wrapper/.exec(this.name)[1];\n  }\n});\nexport default GenericWrapper;\n","import Introspectable from '../Common/Introspectable.js';\nimport TriggerableMixin from '../Common/TriggerableMixin.js';\nimport GenericWrapper from '../Wrappers/GenericWrapper.js';\n\nclass Table extends TriggerableMixin(Introspectable) {\n  constructor (options) {\n    super();\n    this.model = options.model;\n    this.tableId = options.tableId;\n    if (!this.model || !this.tableId) {\n      throw new Error(`model and tableId are required`);\n    }\n\n    this._expectedAttributes = options.attributes || {};\n    this._observedAttributes = {};\n\n    this._derivedTables = options.derivedTables || {};\n\n    this._derivedAttributeFunctions = {};\n    for (const [attr, stringifiedFunc] of Object.entries(options.derivedAttributeFunctions || {})) {\n      this._derivedAttributeFunctions[attr] = this.hydrateFunction(stringifiedFunc);\n    }\n\n    this._suppressedAttributes = options.suppressedAttributes || {};\n    this._suppressIndex = !!options.suppressIndex;\n\n    this._indexFilter = (options.indexFilter && this.hydrateFunction(options.indexFilter)) || null;\n    this._attributeFilters = {};\n    for (const [attr, stringifiedFunc] of Object.entries(options.attributeFilters || {})) {\n      this._attributeFilters[attr] = this.hydrateFunction(stringifiedFunc);\n    }\n  }\n  _toRawObject () {\n    const result = {\n      tableId: this.tableId,\n      attributes: this._attributes,\n      derivedTables: this._derivedTables,\n      usedByClasses: this._usedByClasses,\n      derivedAttributeFunctions: {},\n      suppressedAttributes: this._suppressedAttributes,\n      suppressIndex: this._suppressIndex,\n      attributeFilters: {},\n      indexFilter: (this._indexFilter && this.dehydrateFunction(this._indexFilter)) || null\n    };\n    for (const [attr, func] of Object.entries(this._derivedAttributeFunctions)) {\n      result.derivedAttributeFunctions[attr] = this.dehydrateFunction(func);\n    }\n    for (const [attr, func] of Object.entries(this._attributeFilters)) {\n      result.attributeFilters[attr] = this.dehydrateFunction(func);\n    }\n    return result;\n  }\n  hydrateFunction (stringifiedFunc) {\n    new Function(`return ${stringifiedFunc}`)(); // eslint-disable-line no-new-func\n  }\n  dehydrateFunction (func) {\n    let stringifiedFunc = func.toString();\n    // Istanbul adds some code to functions for computing coverage, that gets\n    // included in the stringification process during testing. See:\n    // https://github.com/gotwarlost/istanbul/issues/310#issuecomment-274889022\n    stringifiedFunc = stringifiedFunc.replace(/cov_(.+?)\\+\\+[,;]?/g, '');\n    return stringifiedFunc;\n  }\n  async * iterate (options = {}) {\n    // Generic caching stuff; this isn't just for performance. ConnectedTable's\n    // algorithm requires that its parent tables have pre-built indexes (we\n    // technically could implement it differently, but it would be expensive,\n    // requires tricky logic, and we're already building indexes for some tables\n    // like AggregatedTable anyway)\n    if (options.reset) {\n      this.reset();\n    }\n\n    if (this._cache) {\n      const limit = options.limit === undefined ? Infinity : options.limit;\n      yield * Object.values(this._cache).slice(0, limit);\n      return;\n    }\n\n    yield * await this._buildCache(options);\n  }\n  async * _buildCache (options = {}) {\n    // TODO: in large data scenarios, we should build the cache / index\n    // externally on disk\n    this._partialCache = {};\n    const limit = options.limit === undefined ? Infinity : options.limit;\n    delete options.limit;\n    const iterator = this._iterate(options);\n    let completed = false;\n    for (let i = 0; i < limit; i++) {\n      const temp = await iterator.next();\n      if (!this._partialCache) {\n        // iteration was cancelled; return immediately\n        return;\n      }\n      if (temp.done) {\n        completed = true;\n        break;\n      } else {\n        this._finishItem(temp.value);\n        this._partialCache[temp.value.index] = temp.value;\n        yield temp.value;\n      }\n    }\n    if (completed) {\n      this._cache = this._partialCache;\n    }\n    delete this._partialCache;\n  }\n  async * _iterate (options) {\n    throw new Error(`this function should be overridden`);\n  }\n  _finishItem (wrappedItem) {\n    for (const [attr, func] of Object.entries(this._derivedAttributeFunctions)) {\n      wrappedItem.row[attr] = func(wrappedItem);\n    }\n    for (const attr in wrappedItem.row) {\n      this._observedAttributes[attr] = true;\n    }\n    for (const attr in this._suppressedAttributes) {\n      delete wrappedItem.row[attr];\n    }\n    let keep = true;\n    if (this._indexFilter) {\n      keep = this._indexFilter(wrappedItem.index);\n    }\n    for (const [attr, func] of Object.entries(this._attributeFilters)) {\n      keep = keep && func(wrappedItem.row[attr]);\n      if (!keep) { break; }\n    }\n    if (keep) {\n      wrappedItem.trigger('finish');\n    } else {\n      wrappedItem.disconnect();\n      wrappedItem.trigger('filter');\n    }\n    return keep;\n  }\n  _wrap (options) {\n    options.table = this;\n    const classObj = this.classObj;\n    const wrappedItem = classObj ? classObj._wrap(options) : new GenericWrapper(options);\n    for (const otherItem of options.itemsToConnect || []) {\n      wrappedItem.connectItem(otherItem);\n      otherItem.connectItem(wrappedItem);\n    }\n    return wrappedItem;\n  }\n  reset () {\n    delete this._partialCache;\n    delete this._cache;\n    for (const derivedTable of this.derivedTables) {\n      derivedTable.reset();\n    }\n    this.trigger('reset');\n  }\n  get name () {\n    throw new Error(`this function should be overridden`);\n  }\n  async buildCache () {\n    if (this._cache) {\n      return this._cache;\n    } else if (this._cachePromise) {\n      return this._cachePromise;\n    } else {\n      this._cachePromise = new Promise(async (resolve, reject) => {\n        for await (const temp of this._buildCache()) {} // eslint-disable-line no-unused-vars\n        delete this._cachePromise;\n        resolve(this._cache);\n      });\n      return this._cachePromise;\n    }\n  }\n  async countRows () {\n    return Object.keys(await this.buildCache()).length;\n  }\n  getIndexDetails () {\n    const details = { name: null };\n    if (this._suppressIndex) {\n      details.suppressed = true;\n    }\n    if (this._indexFilter) {\n      details.filtered = true;\n    }\n    return details;\n  }\n  getAttributeDetails () {\n    const allAttrs = {};\n    for (const attr in this._expectedAttributes) {\n      allAttrs[attr] = allAttrs[attr] || { name: attr };\n      allAttrs[attr].expected = true;\n    }\n    for (const attr in this._observedAttributes) {\n      allAttrs[attr] = allAttrs[attr] || { name: attr };\n      allAttrs[attr].observed = true;\n    }\n    for (const attr in this._derivedAttributeFunctions) {\n      allAttrs[attr] = allAttrs[attr] || { name: attr };\n      allAttrs[attr].derived = true;\n    }\n    for (const attr in this._suppressedAttributes) {\n      allAttrs[attr] = allAttrs[attr] || { name: attr };\n      allAttrs[attr].suppressed = true;\n    }\n    for (const attr in this._attributeFilters) {\n      allAttrs[attr] = allAttrs[attr] || { name: attr };\n      allAttrs[attr].filtered = true;\n    }\n    return allAttrs;\n  }\n  get attributes () {\n    return Object.keys(this.getAttributeDetails());\n  }\n  get currentData () {\n    return {\n      data: this._cache || this._partialCache || {},\n      complete: !!this._cache\n    };\n  }\n  deriveAttribute (attribute, func) {\n    this._derivedAttributeFunctions[attribute] = func;\n    this.reset();\n  }\n  suppressAttribute (attribute) {\n    if (attribute === null) {\n      this._suppressIndex = true;\n    } else {\n      this._suppressedAttributes[attribute] = true;\n    }\n    this.reset();\n  }\n  addFilter (attribute, func) {\n    if (attribute === null) {\n      this._indexFilter = func;\n    } else {\n      this._attributeFilters[attribute] = func;\n    }\n    this.reset();\n  }\n  _deriveTable (options) {\n    options.preSave = (newTable) => {\n      this._derivedTables[newTable.tableId] = true;\n    };\n    return this.model.createTable(options);\n  }\n  _getExistingTable (options) {\n    // Check if the derived table has already been defined\n    const existingTable = this.derivedTables.find(tableObj => {\n      return Object.entries(options).every(([optionName, optionValue]) => {\n        if (optionName === 'type') {\n          return tableObj.constructor.name === optionValue;\n        } else {\n          return tableObj['_' + optionName] === optionValue;\n        }\n      });\n    });\n    return (existingTable && this.model.tables[existingTable.tableId]) || null;\n  }\n  aggregate (attribute) {\n    const options = {\n      type: 'AggregatedTable',\n      attribute\n    };\n    return this._getExistingTable(options) || this._deriveTable(options);\n  }\n  expand (attribute, delimiter) {\n    const options = {\n      type: 'ExpandedTable',\n      attribute,\n      delimiter\n    };\n    return this._getExistingTable(options) || this._deriveTable(options);\n  }\n  closedFacet (attribute, values) {\n    return values.map(value => {\n      const options = {\n        type: 'FacetedTable',\n        attribute,\n        value\n      };\n      return this._getExistingTable(options) || this._deriveTable(options);\n    });\n  }\n  async * openFacet (attribute, limit = Infinity) {\n    const values = {};\n    for await (const wrappedItem of this.iterate({ limit })) {\n      const value = wrappedItem.row[attribute];\n      if (!values[value]) {\n        values[value] = true;\n        const options = {\n          type: 'FacetedTable',\n          attribute,\n          value\n        };\n        yield this._getExistingTable(options) || this._deriveTable(options);\n      }\n    }\n  }\n  closedTranspose (indexes) {\n    return indexes.map(index => {\n      const options = {\n        type: 'TransposedTable',\n        index\n      };\n      return this._getExistingTable(options) || this._deriveTable(options);\n    });\n  }\n  async * openTranspose (limit = Infinity) {\n    for await (const wrappedItem of this.iterate({ limit })) {\n      const options = {\n        type: 'TransposedTable',\n        index: wrappedItem.index\n      };\n      yield this._getExistingTable(options) || this._deriveTable(options);\n    }\n  }\n  connect (otherTableList) {\n    return this.model.createTable({\n      type: 'ConnectedTable',\n      preSave: (newTable) => {\n        this._derivedTables[newTable.tableId] = true;\n        for (const otherTable of otherTableList) {\n          otherTable._derivedTables[newTable.tableId] = true;\n        }\n      }\n    });\n  }\n  get classObj () {\n    return Object.values(this.model.classes).find(classObj => {\n      return classObj.table === this;\n    });\n  }\n  get parentTables () {\n    return Object.values(this.model.tables).reduce((agg, tableObj) => {\n      if (tableObj._derivedTables[this.tableId]) {\n        agg.push(tableObj);\n      }\n      return agg;\n    }, []);\n  }\n  get derivedTables () {\n    return Object.keys(this._derivedTables).map(tableId => {\n      return this.model.tables[tableId];\n    });\n  }\n  get inUse () {\n    if (Object.keys(this._derivedTables).length > 0) {\n      return true;\n    }\n    return Object.values(this.model.classes).some(classObj => {\n      return classObj.tableId === this.tableId ||\n        classObj.sourceTableIds.indexOf(this.tableId) !== -1 ||\n        classObj.targetTableIds.indexOf(this.tableId) !== -1;\n    });\n  }\n  delete () {\n    if (this.inUse) {\n      const err = new Error(`Can't delete in-use table ${this.tableId}`);\n      err.inUse = true;\n      throw err;\n    }\n    for (const parentTable of this.parentTables) {\n      delete parentTable.derivedTables[this.tableId];\n    }\n    delete this.model.tables[this.tableId];\n    this.model.trigger('update');\n  }\n}\nObject.defineProperty(Table, 'type', {\n  get () {\n    return /(.*)Table/.exec(this.name)[1];\n  }\n});\nexport default Table;\n","import Table from './Table.js';\n\nclass StaticTable extends Table {\n  constructor (options) {\n    super(options);\n    this._name = options.name;\n    this._data = options.data || [];\n    if (!this._name || !this._data) {\n      throw new Error(`name and data are required`);\n    }\n  }\n  get name () {\n    return this._name;\n  }\n  _toRawObject () {\n    const obj = super._toRawObject();\n    obj.name = this._name;\n    obj.data = this._data;\n    return obj;\n  }\n  async * _iterate (options) {\n    for (let index = 0; index < this._data.length; index++) {\n      const item = this._wrap({ index, row: this._data[index] });\n      if (this._finishItem(item)) {\n        yield item;\n      }\n    }\n  }\n}\nexport default StaticTable;\n","import Table from './Table.js';\n\nclass StaticDictTable extends Table {\n  constructor (options) {\n    super(options);\n    this._name = options.name;\n    this._data = options.data || {};\n    if (!this._name || !this._data) {\n      throw new Error(`name and data are required`);\n    }\n  }\n  get name () {\n    return this._name;\n  }\n  _toRawObject () {\n    const obj = super._toRawObject();\n    obj.name = this._name;\n    obj.data = this._data;\n    return obj;\n  }\n  async * _iterate (options) {\n    for (const [index, row] of Object.entries(this._data)) {\n      const item = this._wrap({ index, row });\n      if (this._finishItem(item)) {\n        yield item;\n      }\n    }\n  }\n}\nexport default StaticDictTable;\n","const SingleParentMixin = function (superclass) {\n  return class extends superclass {\n    constructor (options) {\n      super(options);\n      this._instanceOfSingleParentMixin = true;\n    }\n    get parentTable () {\n      const parentTables = this.parentTables;\n      if (parentTables.length === 0) {\n        throw new Error(`Parent table is requierd for table of type ${this.type}`);\n      } else if (parentTables.length > 1) {\n        throw new Error(`Only one parent table allowed for table of type ${this.type}`);\n      }\n      return parentTables[0];\n    }\n  };\n};\nObject.defineProperty(SingleParentMixin, Symbol.hasInstance, {\n  value: i => !!i._instanceOfSingleParentMixin\n});\nexport default SingleParentMixin;\n","import Table from './Table.js';\nimport SingleParentMixin from './SingleParentMixin.js';\n\nclass AggregatedTable extends SingleParentMixin(Table) {\n  constructor (options) {\n    super(options);\n    this._attribute = options.attribute;\n    if (!this._attribute) {\n      throw new Error(`attribute is required`);\n    }\n\n    this._reduceAttributeFunctions = {};\n    for (const [attr, stringifiedFunc] of Object.entries(options.reduceAttributeFunctions || {})) {\n      this._reduceAttributeFunctions[attr] = this.model.hydrateFunction(stringifiedFunc);\n    }\n  }\n  _toRawObject () {\n    const obj = super._toRawObject();\n    obj.attribute = this._attribute;\n    obj.reduceAttributeFunctions = {};\n    for (const [attr, func] of Object.entries(this._reduceAttributeFunctions)) {\n      obj.reduceAttributeFunctions[attr] = this.model._dehydrateFunction(func);\n    }\n    return obj;\n  }\n  get name () {\n    return '↦' + this._attribute;\n  }\n  deriveReducedAttribute (attr, func) {\n    this._reduceAttributeFunctions[attr] = func;\n    this.reset();\n  }\n  _updateItem (originalWrappedItem, newWrappedItem) {\n    for (const [attr, func] of Object.entries(this._reduceAttributeFunctions)) {\n      originalWrappedItem.row[attr] = func(originalWrappedItem, newWrappedItem);\n    }\n    originalWrappedItem.trigger('update');\n  }\n  async * _buildCache (options) {\n    // We override _buildCache because so that AggregatedTable can take advantage\n    // of the partially-built cache as it goes, and postpone finishing items\n    // until after the parent table has been fully iterated\n\n    // TODO: in large data scenarios, we should build the cache / index\n    // externally on disk\n    this._partialCache = {};\n    for await (const wrappedItem of this._iterate(options)) {\n      this._partialCache[wrappedItem.index] = wrappedItem;\n      // Go ahead and yield the unfinished item; this makes it possible for\n      // client apps to be more responsive and render partial results, but also\n      // means that they need to watch for wrappedItem.on('update') events\n      yield wrappedItem;\n    }\n\n    // Second pass: now that we've completed the full iteration of the parent\n    // table, we can finish each item\n    for (const index in this._partialCache) {\n      const wrappedItem = this._partialCache[index];\n      if (!this._finishItem(wrappedItem)) {\n        delete this._partialCache[index];\n      }\n    }\n    this._cache = this._partialCache;\n    delete this._partialCache;\n  }\n  async * _iterate (options) {\n    const parentTable = this.parentTable;\n    for await (const wrappedParent of parentTable.iterate(options)) {\n      const index = String(wrappedParent.row[this._attribute]);\n      if (!this._partialCache) {\n        // We were reset; return immediately\n        return;\n      } else if (this._partialCache[index]) {\n        const existingItem = this._partialCache[index];\n        existingItem.connectItem(wrappedParent);\n        wrappedParent.connectItem(existingItem);\n        this._updateItem(existingItem, wrappedParent);\n      } else {\n        const newItem = this._wrap({\n          index,\n          itemsToConnect: [ wrappedParent ]\n        });\n        this._updateItem(newItem, wrappedParent);\n        yield newItem;\n      }\n    }\n  }\n  getAttributeDetails () {\n    const allAttrs = super.getAttributeDetails();\n    for (const attr in this._reduceAttributeFunctions) {\n      allAttrs[attr] = allAttrs[attr] || { name: attr };\n      allAttrs[attr].reduced = true;\n    }\n    return allAttrs;\n  }\n}\nexport default AggregatedTable;\n","import Table from './Table.js';\nimport SingleParentMixin from './SingleParentMixin.js';\n\nclass ExpandedTable extends SingleParentMixin(Table) {\n  constructor (options) {\n    super(options);\n    this._attribute = options.attribute;\n    if (!this._attribute) {\n      throw new Error(`attribute is required`);\n    }\n\n    this.delimiter = options.delimiter || ',';\n  }\n  _toRawObject () {\n    const obj = super._toRawObject();\n    obj.attribute = this._attribute;\n    return obj;\n  }\n  get name () {\n    return this.parentTable.name + '↤';\n  }\n  async * _iterate (options) {\n    let index = 0;\n    const parentTable = this.parentTable;\n    for await (const wrappedParent of parentTable.iterate(options)) {\n      const values = (wrappedParent.row[this._attribute] || '').split(this.delimiter);\n      for (const value of values) {\n        const row = {};\n        row[this._attribute] = value;\n        const newItem = this._wrap({\n          index,\n          row,\n          itemsToConnect: [ wrappedParent ]\n        });\n        if (this._finishItem(newItem)) {\n          yield newItem;\n        }\n        index++;\n      }\n    }\n  }\n}\nexport default ExpandedTable;\n","import Table from './Table.js';\nimport SingleParentMixin from './SingleParentMixin.js';\n\nclass FacetedTable extends SingleParentMixin(Table) {\n  constructor (options) {\n    super(options);\n    this._attribute = options.attribute;\n    this._value = options.value;\n    if (!this._attribute || !this._value === undefined) {\n      throw new Error(`attribute and value are required`);\n    }\n  }\n  _toRawObject () {\n    const obj = super._toRawObject();\n    obj.attribute = this._attribute;\n    obj.value = this._value;\n    return obj;\n  }\n  get name () {\n    return `[${this._value}]`;\n  }\n  async * _iterate (options) {\n    let index = 0;\n    const parentTable = this.parentTable;\n    for await (const wrappedParent of parentTable.iterate(options)) {\n      if (wrappedParent.row[this._attribute] === this._value) {\n        // Normal faceting just gives a subset of the original table\n        const newItem = this._wrap({\n          index,\n          row: Object.assign({}, wrappedParent.row),\n          itemsToConnect: [ wrappedParent ]\n        });\n        if (this._finishItem(newItem)) {\n          yield newItem;\n        }\n        index++;\n      }\n    }\n  }\n}\nexport default FacetedTable;\n","import Table from './Table.js';\nimport SingleParentMixin from './SingleParentMixin.js';\n\nclass TransposedTable extends SingleParentMixin(Table) {\n  constructor (options) {\n    super(options);\n    this._index = options.index;\n    if (this._index === undefined) {\n      throw new Error(`index is required`);\n    }\n  }\n  _toRawObject () {\n    const obj = super._toRawObject();\n    obj.index = this._index;\n    return obj;\n  }\n  get name () {\n    return `ᵀ${this._index}`;\n  }\n  async * _iterate (options) {\n    // Pre-build the parent table's cache\n    const parentTable = this.parentTable;\n    await parentTable.buildCache();\n\n    // Iterate the row's attributes as indexes\n    const wrappedParent = parentTable._cache[this._index] || { row: {} };\n    for (const [ index, value ] of Object.entries(wrappedParent.row)) {\n      const newItem = this._wrap({\n        index,\n        row: typeof value === 'object' ? value : { value },\n        itemsToConnect: [ wrappedParent ]\n      });\n      if (this._finishItem(newItem)) {\n        yield newItem;\n      }\n    }\n  }\n}\nexport default TransposedTable;\n","import Table from './Table.js';\n\nclass ConnectedTable extends Table {\n  get name () {\n    return this.parentTables.map(parentTable => parentTable.name).join('⨯');\n  }\n  async * _iterate (options) {\n    const parentTables = this.parentTables;\n    // Spin through all of the parentTables so that their _cache is pre-built\n    for (const parentTable of parentTables) {\n      await parentTable.buildCache();\n    }\n    // Now that the caches are built, just iterate their keys directly. We only\n    // care about including rows that have exact matches across all tables, so\n    // we can just pick one parent table to iterate\n    const baseParentTable = parentTables[0];\n    const otherParentTables = parentTables.slice(1);\n    for (const index in baseParentTable._cache) {\n      if (!parentTables.every(table => table._cache)) {\n        // One of the parent tables was reset; return immediately\n        return;\n      }\n      if (!otherParentTables.every(table => table._cache[index])) {\n        // No match in one of the other tables; omit this item\n        continue;\n      }\n      // TODO: add each parent tables' keys as attribute values\n      const newItem = this._wrap({\n        index,\n        itemsToConnect: parentTables.map(table => table._cache[index])\n      });\n      if (this._finishItem(newItem)) {\n        yield newItem;\n      }\n    }\n  }\n}\nexport default ConnectedTable;\n","import Introspectable from '../Common/Introspectable.js';\nimport GenericWrapper from '../Wrappers/GenericWrapper.js';\n\nclass GenericClass extends Introspectable {\n  constructor (options) {\n    super();\n    this.model = options.model;\n    this.classId = options.classId;\n    this.tableId = options.tableId;\n    if (!this.model || !this.classId || !this.tableId) {\n      throw new Error(`model, classId, and tableId are required`);\n    }\n\n    this._className = options.className || null;\n    this.annotations = options.annotations || {};\n  }\n  _toRawObject () {\n    return {\n      classId: this.classId,\n      tableId: this.tableId,\n      className: this._className,\n      annotations: this.annotations\n    };\n  }\n  setClassName (value) {\n    this._className = value;\n    this.model.trigger('update');\n  }\n  get hasCustomName () {\n    return this._className !== null;\n  }\n  get className () {\n    return this._className || this.table.name;\n  }\n  get table () {\n    return this.model.tables[this.tableId];\n  }\n  _wrap (options) {\n    options.classObj = this;\n    return new GenericWrapper(options);\n  }\n  interpretAsNodes () {\n    const options = this._toRawObject();\n    options.type = 'NodeClass';\n    options.overwrite = true;\n    this.table.reset();\n    return this.model.createClass(options);\n  }\n  interpretAsEdges () {\n    const options = this._toRawObject();\n    options.type = 'EdgeClass';\n    options.overwrite = true;\n    this.table.reset();\n    return this.model.createClass(options);\n  }\n  _deriveNewClass (newTable, type = this.constructor.name) {\n    return this.model.createClass({\n      tableId: newTable.tableId,\n      type\n    });\n  }\n  aggregate (attribute) {\n    return this._deriveNewClass(this.table.aggregate(attribute));\n  }\n  expand (attribute, delimiter) {\n    return this._deriveNewClass(this.table.expand(attribute, delimiter));\n  }\n  closedFacet (attribute, values) {\n    return this.table.closedFacet(attribute, values).map(newTable => {\n      return this._deriveNewClass(newTable);\n    });\n  }\n  async * openFacet (attribute) {\n    for await (const newTable of this.table.openFacet(attribute)) {\n      yield this._deriveNewClass(newTable);\n    }\n  }\n  closedTranspose (indexes) {\n    return this.table.closedTranspose(indexes).map(newTable => {\n      return this._deriveNewClass(newTable);\n    });\n  }\n  async * openTranspose () {\n    for await (const newTable of this.table.openTranspose()) {\n      yield this._deriveNewClass(newTable);\n    }\n  }\n  delete () {\n    delete this.model.classes[this.classId];\n    this.model.trigger('update');\n  }\n}\nObject.defineProperty(GenericClass, 'type', {\n  get () {\n    return /(.*)Class/.exec(this.name)[1];\n  }\n});\nexport default GenericClass;\n","import GenericWrapper from './GenericWrapper.js';\n\nclass NodeWrapper extends GenericWrapper {\n  constructor (options) {\n    super(options);\n    if (!this.classObj) {\n      throw new Error(`classObj is required`);\n    }\n  }\n  async * edges (options = { limit: Infinity }) {\n    const edgeIds = options.edgeIds || this.classObj.edgeClassIds;\n    let i = 0;\n    for (const edgeId of Object.keys(edgeIds)) {\n      const edgeClass = this.classObj._origraph.classes[edgeId];\n      if (edgeClass.sourceClassId === this.classObj.classId) {\n        options.tableIds = edgeClass.sourceTableIds.slice().reverse()\n          .concat([edgeClass.tableId]);\n      } else {\n        options.tableIds = edgeClass.targetTableIds.slice().reverse()\n          .concat([edgeClass.tableId]);\n      }\n      for await (const item of this.iterateAcrossConnections(options)) {\n        yield item;\n        i++;\n        if (i >= options.limit) {\n          return;\n        }\n      }\n    }\n  }\n}\n\nexport default NodeWrapper;\n","import GenericClass from './GenericClass.js';\nimport NodeWrapper from '../Wrappers/NodeWrapper.js';\n\nclass NodeClass extends GenericClass {\n  constructor (options) {\n    super(options);\n    this.edgeClassIds = options.edgeClassIds || {};\n  }\n  _toRawObject () {\n    const result = super._toRawObject();\n    result.edgeClassIds = this.edgeClassIds;\n    return result;\n  }\n  _wrap (options) {\n    options.classObj = this;\n    return new NodeWrapper(options);\n  }\n  interpretAsNodes () {\n    return this;\n  }\n  interpretAsEdges () {\n    const edgeClassIds = Object.keys(this.edgeClassIds);\n    const options = super._toRawObject();\n\n    if (edgeClassIds.length > 2) {\n      // If there are more than two edges, break all connections and make\n      // this a floating edge (for now, we're not dealing in hyperedges)\n      this.disconnectAllEdges();\n    } else if (edgeClassIds.length === 1) {\n      // With only one connection, this node should become a self-edge\n      const edgeClass = this.model.classes[edgeClassIds[0]];\n      // Are we the source or target of the existing edge (internally, in terms\n      // of sourceId / targetId, not edgeClass.direction)?\n      const isSource = edgeClass.sourceClassId === this.classId;\n\n      // As we're converted to an edge, our new resulting source AND target\n      // should be whatever is at the other end of edgeClass (if anything)\n      if (isSource) {\n        options.sourceClassId = options.targetClassId = edgeClass.targetClassId;\n      } else {\n        options.sourceClassId = options.targetClassId = edgeClass.sourceClassId;\n      }\n\n      // tableId lists should emanate out from the (new) edge table; assuming\n      // (for a moment) that isSource === true, we'd construct the tableId list\n      // like this:\n      let tableIdList = edgeClass.targetTableIds.slice().reverse()\n        .concat([ edgeClass.tableId ])\n        .concat(edgeClass.sourceTableIds);\n      if (!isSource) {\n        // Whoops, got it backwards!\n        tableIdList.reverse();\n      }\n      options.directed = edgeClass.directed;\n      options.sourceTableIds = options.targetTableIds = tableIdList;\n      // TODO: instead of deleting the existing edge class, should we leave it\n      // hanging + unconnected?\n      edgeClass.delete();\n    } else if (edgeClassIds.length === 2) {\n      // Okay, we've got two edges, so this is a little more straightforward\n      let sourceEdgeClass = this.model.classes[edgeClassIds[0]];\n      let targetEdgeClass = this.model.classes[edgeClassIds[1]];\n      // Figure out the direction, if there is one\n      options.directed = false;\n      if (sourceEdgeClass.directed && targetEdgeClass.directed) {\n        if (sourceEdgeClass.targetClassId === this.classId &&\n            targetEdgeClass.sourceClassId === this.classId) {\n          // We happened to get the edges in order; set directed to true\n          options.directed = true;\n        } else if (sourceEdgeClass.sourceClassId === this.classId &&\n                   targetEdgeClass.targetClassId === this.classId) {\n          // We got the edges backwards; swap them and set directed to true\n          targetEdgeClass = this.model.classes[edgeClassIds[0]];\n          sourceEdgeClass = this.model.classes[edgeClassIds[1]];\n          options.directed = true;\n        }\n      }\n      // Okay, now we know how to set source / target ids\n      options.sourceClassId = sourceEdgeClass.classId;\n      options.targetClassId = targetEdgeClass.classId;\n      // Concatenate the intermediate tableId lists, emanating out from the\n      // (new) edge table\n      options.sourceTableIds = sourceEdgeClass.targetTableIds.slice().reverse()\n        .concat([ sourceEdgeClass.tableId ])\n        .concat(sourceEdgeClass.sourceTableIds);\n      if (sourceEdgeClass.targetClassId === this.classId) {\n        options.sourceTableIds.reverse();\n      }\n      options.targetTableIds = targetEdgeClass.targetTableIds.slice().reverse()\n        .concat([ targetEdgeClass.tableId ])\n        .concat(targetEdgeClass.sourceTableIds);\n      if (targetEdgeClass.targetClassId === this.classId) {\n        options.targetTableIds.reverse();\n      }\n      // Delete each of the edge classes\n      sourceEdgeClass.delete();\n      targetEdgeClass.delete();\n    }\n    this.delete();\n    delete options.edgeClassIds;\n    options.type = 'EdgeClass';\n    options.overwrite = true;\n    this.table.reset();\n    return this.model.createClass(options);\n  }\n  connectToNodeClass ({ otherNodeClass, attribute, otherAttribute }) {\n    let thisHash, otherHash, sourceTableIds, targetTableIds;\n    if (attribute === null) {\n      thisHash = this.table;\n      sourceTableIds = [];\n    } else {\n      thisHash = this.table.aggregate(attribute);\n      sourceTableIds = [ thisHash.tableId ];\n    }\n    if (otherAttribute === null) {\n      otherHash = otherNodeClass.table;\n      targetTableIds = [];\n    } else {\n      otherHash = otherNodeClass.table.aggregate(otherAttribute);\n      targetTableIds = [ otherHash.tableId ];\n    }\n    // If we have a self edge connecting the same attribute, we can just use\n    // the AggregatedTable as the edge table; otherwise we need to create a\n    // ConnectedTable\n    const connectedTable = this === otherNodeClass && attribute === otherAttribute\n      ? thisHash : thisHash.connect([otherHash]);\n    return this.model.createClass({\n      type: 'EdgeClass',\n      tableId: connectedTable.tableId,\n      sourceClassId: this.classId,\n      sourceTableIds,\n      targetClassId: otherNodeClass.classId,\n      targetTableIds,\n      preSave: newEdgeClass => {\n        this.edgeClassIds[newEdgeClass.classId] = true;\n        otherNodeClass.edgeClassIds[newEdgeClass.classId] = true;\n      }\n    });\n  }\n  connectToEdgeClass (options) {\n    const edgeClass = options.edgeClass;\n    delete options.edgeClass;\n    options.nodeClass = this;\n    return edgeClass.connectToNodeClass(options);\n  }\n  aggregate (attribute) {\n    const newNodeClass = super.aggregate(attribute);\n    this.connectToNodeClass({\n      otherNodeClass: newNodeClass,\n      attribute,\n      otherAttribute: null\n    });\n    return newNodeClass;\n  }\n  disconnectAllEdges (options) {\n    for (const edgeClass of this.connectedClasses()) {\n      if (edgeClass.sourceClassId === this.classId) {\n        edgeClass.disconnectSource(options);\n      }\n      if (edgeClass.targetClassId === this.classId) {\n        edgeClass.disconnectTarget(options);\n      }\n    }\n  }\n  * connectedClasses () {\n    for (const edgeClassId of Object.keys(this.edgeClassIds)) {\n      yield this.model.classes[edgeClassId];\n    }\n  }\n  delete () {\n    this.disconnectAllEdges();\n    super.delete();\n  }\n}\n\nexport default NodeClass;\n","import GenericWrapper from './GenericWrapper.js';\n\nclass EdgeWrapper extends GenericWrapper {\n  constructor (options) {\n    super(options);\n    if (!this.classObj) {\n      throw new Error(`classObj is required`);\n    }\n  }\n  async * sourceNodes (options = {}) {\n    if (this.classObj.sourceClassId === null) {\n      return;\n    }\n    const sourceTableId = this.classObj._origraph\n      .classes[this.classObj.sourceClassId].tableId;\n    options.tableIds = this.classObj.sourceTableIds\n      .concat([ sourceTableId ]);\n    yield * this.iterateAcrossConnections(options);\n  }\n  async * targetNodes (options = {}) {\n    if (this.classObj.targetClassId === null) {\n      return;\n    }\n    const targetTableId = this.classObj._origraph\n      .classes[this.classObj.targetClassId].tableId;\n    options.tableIds = this.classObj.targetTableIds\n      .concat([ targetTableId ]);\n    yield * this.iterateAcrossConnections(options);\n  }\n}\n\nexport default EdgeWrapper;\n","import GenericClass from './GenericClass.js';\nimport EdgeWrapper from '../Wrappers/EdgeWrapper.js';\n\nclass EdgeClass extends GenericClass {\n  constructor (options) {\n    super(options);\n\n    // sourceTableIds and targetTableIds are lists of any intermediate tables,\n    // beginning with the edge table (but not including it), that lead to the\n    // source / target node tables (but not including) those\n\n    this.sourceClassId = options.sourceClassId || null;\n    this.sourceTableIds = options.sourceTableIds || [];\n    this.targetClassId = options.targetClassId || null;\n    this.targetTableIds = options.targetTableIds || [];\n    this.directed = options.directed || false;\n  }\n  _toRawObject () {\n    const result = super._toRawObject();\n\n    result.sourceClassId = this.sourceClassId;\n    result.sourceTableIds = this.sourceTableIds;\n    result.targetClassId = this.targetClassId;\n    result.targetTableIds = this.targetTableIds;\n    result.directed = this.directed;\n    return result;\n  }\n  _wrap (options) {\n    options.classObj = this;\n    return new EdgeWrapper(options);\n  }\n  _splitTableIdList (tableIdList, otherClass) {\n    let result = {\n      nodeTableIdList: [],\n      edgeTableId: null,\n      edgeTableIdList: []\n    };\n    if (tableIdList.length === 0) {\n      // Weird corner case where we're trying to create an edge between\n      // adjacent or identical tables... create a ConnectedTable\n      result.edgeTableId = this.table.connect(otherClass.table).tableId;\n      return result;\n    } else {\n      // Use a table in the middle as the new edge table; prioritize\n      // StaticTable and StaticDictTable\n      let staticExists = false;\n      let tableDistances = tableIdList.map((tableId, index) => {\n        staticExists = staticExists || this.model.tables[tableId].type.startsWith('Static');\n        return { tableId, index, dist: Math.abs(tableIdList / 2 - index) };\n      });\n      if (staticExists) {\n        tableDistances = tableDistances.filter(({ tableId }) => {\n          return this.model.tables[tableId].type.startsWith('Static');\n        });\n      }\n      const { tableId, index } = tableDistances.sort((a, b) => a.dist - b.dist)[0];\n      result.edgeTableId = tableId;\n      result.edgeTableIdList = tableIdList.slice(0, index).reverse();\n      result.nodeTableIdList = tableIdList.slice(index + 1);\n    }\n    return result;\n  }\n  interpretAsNodes () {\n    const temp = this._toRawObject();\n    this.disconnectAllEdges();\n    temp.type = 'NodeClass';\n    temp.overwrite = true;\n    const newNodeClass = this.model.createClass(temp);\n\n    if (temp.sourceClassId) {\n      const sourceClass = this.model.classes[temp.sourceClassId];\n      const {\n        nodeTableIdList,\n        edgeTableId,\n        edgeTableIdList\n      } = this._splitTableIdList(temp.sourceTableIds, sourceClass);\n      const sourceEdgeClass = this.model.createClass({\n        type: 'EdgeClass',\n        tableId: edgeTableId,\n        directed: temp.directed,\n        sourceClassId: temp.sourceClassId,\n        sourceTableIds: nodeTableIdList,\n        targetClassId: newNodeClass.classId,\n        targetTableIds: edgeTableIdList\n      });\n      sourceClass.edgeClassIds[sourceEdgeClass.classId] = true;\n      newNodeClass.edgeClassIds[sourceEdgeClass.classId] = true;\n    }\n    if (temp.targetClassId && temp.sourceClassId !== temp.targetClassId) {\n      const targetClass = this.model.classes[temp.targetClassId];\n      const {\n        nodeTableIdList,\n        edgeTableId,\n        edgeTableIdList\n      } = this._splitTableIdList(temp.targetTableIds, targetClass);\n      const targetEdgeClass = this.model.createClass({\n        type: 'EdgeClass',\n        tableId: edgeTableId,\n        directed: temp.directed,\n        sourceClassId: newNodeClass.classId,\n        sourceTableIds: edgeTableIdList,\n        targetClassId: temp.targetClassId,\n        targetTableIds: nodeTableIdList\n      });\n      targetClass.edgeClassIds[targetEdgeClass.classId] = true;\n      newNodeClass.edgeClassIds[targetEdgeClass.classId] = true;\n    }\n    this.table.reset();\n    this.model.trigger('update');\n    return newNodeClass;\n  }\n  * connectedClasses () {\n    if (this.sourceClassId) {\n      yield this.model.classes[this.sourceClassId];\n    }\n    if (this.targetClassId) {\n      yield this.model.classes[this.targetClassId];\n    }\n  }\n  interpretAsEdges () {\n    return this;\n  }\n  connectToNodeClass (options) {\n    if (options.side === 'source') {\n      this.connectSource(options);\n    } else if (options.side === 'target') {\n      this.connectTarget(options);\n    } else {\n      throw new Error(`PoliticalOutsiderError: \"${options.side}\" is an invalid side`);\n    }\n  }\n  toggleDirection (directed) {\n    if (directed === false || this.swappedDirection === true) {\n      this.directed = false;\n      delete this.swappedDirection;\n    } else if (!this.directed) {\n      this.directed = true;\n      this.swappedDirection = false;\n    } else {\n      // Directed was already true, just switch source and target\n      let temp = this.sourceClassId;\n      this.sourceClassId = this.targetClassId;\n      this.targetClassId = temp;\n      temp = this.sourceTableIds;\n      this.sourceTableIds = this.targetTableIds;\n      this.targetTableIds = temp;\n      this.swappedDirection = true;\n    }\n    this.model.trigger('update');\n  }\n  connectSource ({\n    nodeClass,\n    nodeAttribute = null,\n    edgeAttribute = null\n  } = {}) {\n    if (this.sourceClassId) {\n      this.disconnectSource();\n    }\n    this.sourceClassId = nodeClass.classId;\n    const sourceClass = this.model.classes[this.sourceClassId];\n    sourceClass.edgeClassIds[this.classId] = true;\n\n    const edgeHash = edgeAttribute === null ? this.table : this.table.aggregate(edgeAttribute);\n    const nodeHash = nodeAttribute === null ? sourceClass.table : sourceClass.table.aggregate(nodeAttribute);\n    this.sourceTableIds = [ edgeHash.connect([nodeHash]).tableId ];\n    if (edgeAttribute !== null) {\n      this.sourceTableIds.unshift(edgeHash.tableId);\n    }\n    if (nodeAttribute !== null) {\n      this.sourceTableIds.push(nodeHash.tableId);\n    }\n    this.model.trigger('update');\n  }\n  connectTarget ({\n    nodeClass,\n    nodeAttribute = null,\n    edgeAttribute = null\n  } = {}) {\n    if (this.targetClassId) {\n      this.disconnectTarget();\n    }\n    this.targetClassId = nodeClass.classId;\n    const targetClass = this.model.classes[this.targetClassId];\n    targetClass.edgeClassIds[this.classId] = true;\n\n    const edgeHash = edgeAttribute === null ? this.table : this.table.aggregate(edgeAttribute);\n    const nodeHash = nodeAttribute === null ? targetClass.table : targetClass.table.aggregate(nodeAttribute);\n    this.targetTableIds = [ edgeHash.connect([nodeHash]).tableId ];\n    if (edgeAttribute !== null) {\n      this.targetTableIds.unshift(edgeHash.tableId);\n    }\n    if (nodeAttribute !== null) {\n      this.targetTableIds.push(nodeHash.tableId);\n    }\n    this.model.trigger('update');\n  }\n  disconnectSource () {\n    const existingSourceClass = this.model.classes[this.sourceClassId];\n    if (existingSourceClass) {\n      delete existingSourceClass.edgeClassIds[this.classId];\n    }\n    this.sourceTableIds = [];\n    this.sourceClassId = null;\n    this.model.trigger('update');\n  }\n  disconnectTarget () {\n    const existingTargetClass = this.model.classes[this.targetClassId];\n    if (existingTargetClass) {\n      delete existingTargetClass.edgeClassIds[this.classId];\n    }\n    this.targetTableIds = [];\n    this.targetClassId = null;\n    this.model.trigger('update');\n  }\n  delete () {\n    this.disconnectSource();\n    this.disconnectTarget();\n    super.delete();\n  }\n}\n\nexport default EdgeClass;\n","import TriggerableMixin from '../Common/TriggerableMixin.js';\nimport mime from 'mime-types';\nimport datalib from 'datalib';\n\nimport * as TABLES from '../Tables/Tables.js';\nimport * as CLASSES from '../Classes/Classes.js';\n\nconst DATALIB_FORMATS = {\n  'json': 'json',\n  'csv': 'csv',\n  'tsv': 'tsv',\n  'topojson': 'topojson',\n  'treejson': 'treejson'\n};\n\nlet NEXT_CLASS_ID = 1;\nlet NEXT_TABLE_ID = 1;\n\nclass NetworkModel extends TriggerableMixin(class {}) {\n  constructor ({\n    origraph,\n    modelId,\n    name = modelId,\n    annotations = {},\n    classes = {},\n    tables = {}\n  }) {\n    super();\n    this._origraph = origraph;\n    this.modelId = modelId;\n    this.name = name;\n    this.annotations = annotations;\n    this.classes = {};\n    this.tables = {};\n\n    for (const classObj of Object.values(classes)) {\n      this.classes[classObj.classId] = this.hydrate(classObj, CLASSES);\n    }\n    for (const table of Object.values(tables)) {\n      this.tables[table.tableId] = this.hydrate(table, TABLES);\n    }\n\n    this.on('update', () => {\n      clearTimeout(this._saveTimeout);\n      this._saveTimeout = setTimeout(() => {\n        this._origraph.save();\n        this._saveTimeout = undefined;\n      }, 0);\n    });\n  }\n  _toRawObject () {\n    const classes = {};\n    const tables = {};\n    for (const classObj of Object.values(this.classes)) {\n      classes[classObj.classId] = classObj._toRawObject();\n      classes[classObj.classId].type = classObj.type;\n    }\n    for (const tableObj of Object.values(this.tables)) {\n      tables[tableObj.tableId] = tableObj._toRawObject();\n      tables[tableObj.tableId].type = tableObj.type;\n    }\n    return {\n      modelId: this.modelId,\n      name: this.name,\n      annotations: this.annotations,\n      classes: this.classes,\n      tables: this.tables\n    };\n  }\n  get unsaved () {\n    return this._saveTimeout !== undefined;\n  }\n  hydrate (rawObject, TYPES) {\n    rawObject.model = this;\n    return new TYPES[rawObject.type](rawObject);\n  }\n  createTable (options) {\n    while (!options.tableId || (!options.overwrite && this.tables[options.tableId])) {\n      options.tableId = `table${NEXT_TABLE_ID}`;\n      NEXT_TABLE_ID += 1;\n    }\n    options.model = this;\n    this.tables[options.tableId] = new TABLES[options.type](options);\n    this.trigger('update');\n    return this.tables[options.tableId];\n  }\n  createClass (options = { selector: `empty` }) {\n    while (!options.classId || (!options.overwrite && this.classes[options.classId])) {\n      options.classId = `class${NEXT_CLASS_ID}`;\n      NEXT_CLASS_ID += 1;\n    }\n    options.model = this;\n    this.classes[options.classId] = new CLASSES[options.type](options);\n    this.trigger('update');\n    return this.classes[options.classId];\n  }\n  async addFileAsStaticTable ({\n    fileObj,\n    encoding = mime.charset(fileObj.type),\n    extensionOverride = null,\n    skipSizeCheck = false\n  } = {}) {\n    const fileMB = fileObj.size / 1048576;\n    if (fileMB >= 30) {\n      if (skipSizeCheck) {\n        console.warn(`Attempting to load ${fileMB}MB file into memory`);\n      } else {\n        throw new Error(`${fileMB}MB file is too large to load statically`);\n      }\n    }\n    // extensionOverride allows things like topojson or treejson (that don't\n    // have standardized mimeTypes) to be parsed correctly\n    let text = await new Promise((resolve, reject) => {\n      let reader = new this.FileReader();\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.readAsText(fileObj, encoding);\n    });\n    return this.addStringAsStaticTable({\n      name: fileObj.name,\n      extension: extensionOverride || mime.extension(fileObj.type),\n      text\n    });\n  }\n  addStringAsStaticTable ({ name, extension = 'txt', text }) {\n    let data, attributes;\n    if (DATALIB_FORMATS[extension]) {\n      data = datalib.read(text, { type: extension });\n      if (extension === 'csv' || extension === 'tsv') {\n        attributes = {};\n        for (const attr of data.columns) {\n          attributes[attr] = true;\n        }\n        delete data.columns;\n      }\n    } else if (extension === 'xml') {\n      throw new Error('unimplemented');\n    } else if (extension === 'txt') {\n      throw new Error('unimplemented');\n    } else {\n      throw new Error(`Unsupported file extension: ${extension}`);\n    }\n    return this.addStaticTable({ name, data, attributes });\n  }\n  addStaticTable (options) {\n    options.type = options.data instanceof Array ? 'StaticTable' : 'StaticDictTable';\n    let newTable = this.createTable(options);\n    return this.createClass({\n      type: 'GenericClass',\n      name: options.name,\n      tableId: newTable.tableId\n    });\n  }\n  deleteAllUnusedTables () {\n    for (const tableId in this.tables) {\n      if (this.tables[tableId]) {\n        try {\n          this.tables[tableId].delete();\n        } catch (err) {\n          if (!err.inUse) {\n            throw err;\n          }\n        }\n      }\n    }\n    this.trigger('update');\n  }\n  getNetworkModelGraph (includeDummies = false) {\n    const edgeClasses = [];\n    let graph = {\n      classes: [],\n      classLookup: {},\n      classConnections: []\n    };\n\n    const classList = Object.values(this.classes);\n\n    for (const classObj of classList) {\n      // Add and index the class as a node\n      graph.classLookup[classObj.classId] = graph.classes.length;\n      const classSpec = classObj._toRawObject();\n      classSpec.type = classObj.constructor.name;\n      graph.classes.push(classSpec);\n\n      if (classObj.type === 'Edge') {\n        // Store the edge class so we can create classConnections later\n        edgeClasses.push(classObj);\n      } else if (classObj.type === 'Node' && includeDummies) {\n        // Create a \"potential\" connection + dummy node\n        graph.classConnections.push({\n          id: `${classObj.classID}>dummy`,\n          source: graph.classes.length,\n          target: graph.classes.length,\n          directed: false,\n          location: 'node',\n          dummy: true\n        });\n        graph.nodes.push({ dummy: true });\n      }\n\n      // Create existing classConnections\n      edgeClasses.forEach(edgeClass => {\n        if (edgeClass.sourceClassId !== null) {\n          // Connect the source node class to the edge class\n          graph.classConnections.push({\n            id: `${edgeClass.sourceClassId}>${edgeClass.classId}`,\n            source: graph.classLookup[edgeClass.sourceClassId],\n            target: graph.classLookup[edgeClass.classId],\n            directed: edgeClass.directed,\n            location: 'source'\n          });\n        } else if (includeDummies) {\n          // Create a \"potential\" connection + dummy source class\n          graph.classConnections.push({\n            id: `dummy>${edgeClass.classId}`,\n            source: graph.classes.length,\n            target: graph.classLookup[edgeClass.classId],\n            directed: edgeClass.directed,\n            location: 'source',\n            dummy: true\n          });\n          graph.classes.push({ dummy: true });\n        }\n        if (edgeClass.targetClassId !== null) {\n          // Connect the edge class to the target node class\n          graph.classConnections.push({\n            id: `${edgeClass.classId}>${edgeClass.targetClassId}`,\n            source: graph.classLookup[edgeClass.classId],\n            target: graph.classLookup[edgeClass.targetClassId],\n            directed: edgeClass.directed,\n            location: 'target'\n          });\n        } else if (includeDummies) {\n          // Create a \"potential\" connection + dummy target class\n          graph.classConnections.push({\n            id: `${edgeClass.classId}>dummy`,\n            source: graph.classLookup[edgeClass.classId],\n            target: graph.classes.length,\n            directed: edgeClass.directed,\n            location: 'target',\n            dummy: true\n          });\n          graph.classes.push({ dummy: true });\n        }\n      });\n    }\n\n    Object.entries(this.classes).forEach(([selector, classObj]) => {\n      // Add and index the class as a node\n      graph.classLookup[classObj.classId] = graph.nodes.length;\n      graph.nodes.push({ classObj });\n      if (classObj.type === 'Edge') {\n        // Store the edge class so we can create classConnections later\n        edgeClasses.push(classObj);\n      } else if (classObj.type === 'Node') {\n        // Create a \"potential\" connection + dummy node\n        graph.edges.push({\n          id: `${classObj.classId}>dummy`,\n          source: graph.nodes.length - 1,\n          target: graph.nodes.length,\n          directed: false,\n          location: 'node',\n          dummy: true\n        });\n        graph.nodes.push({ dummy: true });\n      }\n    });\n\n    return graph;\n  }\n  getTableDependencyGraph () {\n    const graph = {\n      tables: [],\n      tableLookup: {},\n      tableLinks: []\n    };\n    const tableLinkLookup = {};\n    const tableList = Object.values(this.tables);\n    for (const table of tableList) {\n      const tableSpec = table._toRawObject();\n      tableSpec.type = table.constructor.name;\n      graph.tableLookup[table.tableId] = graph.tables.length;\n      graph.tables.push(tableSpec);\n    }\n    // Fill the graph with links based on parentTables...\n    for (const table of tableList) {\n      for (const parentTable of table.parentTables) {\n        tableLinkLookup[parentTable.tableId + table.tableId] =\n          graph.tableLinks.length;\n        graph.tableLinks.push({\n          source: graph.tableLookup[parentTable.tableId],\n          target: graph.tableLookup[table.tableId]\n        });\n      }\n    }\n    // Validate that all of the derivedTables links are represented\n    for (const table of tableList) {\n      for (const derivedTable of table.derivedTables) {\n        if (tableLinkLookup[table.tableId + derivedTable.tableId] === undefined) {\n          throw new Error(`Missing derived table link: ${table.tableId} => ${derivedTable.tableId}`);\n        }\n      }\n    }\n    return graph;\n  }\n  createFullSchemaGraph () {\n    // const graph = Object.assign(this.getNetworkModelGraph(), this.getTableDependencyGraph());\n    throw new Error(`unimplemented`);\n  }\n}\nexport default NetworkModel;\n","import NetworkModel from './Common/NetworkModel.js';\n\nlet NEXT_MODEL_ID = 1;\n\nclass Origraph {\n  constructor (FileReader, localStorage) {\n    this.FileReader = FileReader; // either window.FileReader or one from Node\n    this.localStorage = localStorage; // either window.localStorage or null\n\n    this.plugins = {};\n\n    this.models = {};\n    let existingModels = this.localStorage && this.localStorage.getItem('origraph_models');\n    if (existingModels) {\n      for (const [modelId, model] of Object.entries(JSON.parse(existingModels))) {\n        model.origraph = this;\n        this.models[modelId] = new NetworkModel(model);\n      }\n    }\n\n    this._currentModelId = null;\n  }\n  registerPlugin (name, plugin) {\n    this.plugins[name] = plugin;\n  }\n  save () {\n    if (this.localStorage) {\n      const models = {};\n      for (const [modelId, model] of Object.entries(this.models)) {\n        models[modelId] = model._toRawObject();\n      }\n      this.localStorage.setItem('origraph_models', JSON.stringify(models));\n    }\n  }\n  closeCurrentModel () {\n    this._currentModelId = null;\n  }\n  get currentModel () {\n    return this.models[this._currentModelId] || this.createModel();\n  }\n  set currentModel (model) {\n    this._currentModelId = model.modelId;\n  }\n  createModel (options = {}) {\n    while (!options.modelId || this.models[options.modelId]) {\n      options.modelId = `model${NEXT_MODEL_ID}`;\n      NEXT_MODEL_ID += 1;\n    }\n    options.origraph = this;\n    this.models[options.modelId] = new NetworkModel(options);\n    this._currentModelId = options.modelId;\n    this.save();\n    return this.models[options.modelId];\n  }\n  deleteModel (modelId = this.currentModelId) {\n    if (!this.models[modelId]) {\n      throw new Error(`Can't delete non-existent model: ${modelId}`);\n    }\n    delete this.models[modelId];\n    if (this._currentModelId === modelId) {\n      this._currentModelId = null;\n    }\n    this.save();\n  }\n  deleteAllModels () {\n    this.models = {};\n    this._currentModelId = null;\n    this.save();\n  }\n}\n\nexport default Origraph;\n","import Origraph from './Origraph.js';\nimport pkg from '../package.json';\nimport FileReader from 'filereader';\n\nlet origraph = new Origraph(FileReader, null);\norigraph.version = pkg.version;\n\nexport default origraph;\n"],"names":["TriggerableMixin","superclass","constructor","arguments","_instanceOfTriggerableMixin","_eventHandlers","_stickyTriggers","on","eventName","callback","allowDuplicateListeners","indexOf","push","off","index","splice","trigger","args","forEach","setTimeout","apply","stickyTrigger","argObj","delay","Object","assign","clearTimeout","timeout","defineProperty","Symbol","hasInstance","value","i","Introspectable","type","lowerCamelCaseType","humanReadableType","configurable","get","temp","replace","toLocaleLowerCase","GenericWrapper","options","table","undefined","Error","classObj","row","connectedItems","connectItem","item","tableId","disconnect","itemList","values","iterateAcrossConnections","tableIds","limit","Infinity","Promise","all","map","_origraph","tables","buildCache","_iterateAcrossConnections","length","thisTableId","remainingTableIds","slice","exec","name","Table","model","_expectedAttributes","attributes","_observedAttributes","_derivedTables","derivedTables","_derivedAttributeFunctions","attr","stringifiedFunc","entries","derivedAttributeFunctions","hydrateFunction","_suppressedAttributes","suppressedAttributes","_suppressIndex","suppressIndex","_indexFilter","indexFilter","_attributeFilters","attributeFilters","_toRawObject","result","_attributes","usedByClasses","_usedByClasses","dehydrateFunction","func","Function","toString","iterate","reset","_cache","_buildCache","_partialCache","iterator","_iterate","completed","next","done","_finishItem","wrappedItem","keep","_wrap","otherItem","itemsToConnect","derivedTable","_cachePromise","resolve","reject","countRows","keys","getIndexDetails","details","suppressed","filtered","getAttributeDetails","allAttrs","expected","observed","derived","currentData","data","complete","deriveAttribute","attribute","suppressAttribute","addFilter","_deriveTable","preSave","newTable","createTable","_getExistingTable","existingTable","find","tableObj","every","optionName","optionValue","aggregate","expand","delimiter","closedFacet","openFacet","closedTranspose","indexes","openTranspose","connect","otherTableList","otherTable","classes","parentTables","reduce","agg","inUse","some","sourceTableIds","targetTableIds","delete","err","parentTable","StaticTable","_name","_data","obj","StaticDictTable","SingleParentMixin","_instanceOfSingleParentMixin","AggregatedTable","_attribute","_reduceAttributeFunctions","reduceAttributeFunctions","_dehydrateFunction","deriveReducedAttribute","_updateItem","originalWrappedItem","newWrappedItem","wrappedParent","String","existingItem","newItem","reduced","ExpandedTable","split","FacetedTable","_value","TransposedTable","_index","ConnectedTable","join","baseParentTable","otherParentTables","GenericClass","classId","_className","className","annotations","setClassName","hasCustomName","interpretAsNodes","overwrite","createClass","interpretAsEdges","_deriveNewClass","NodeWrapper","edges","edgeIds","edgeClassIds","edgeId","edgeClass","sourceClassId","reverse","concat","NodeClass","disconnectAllEdges","isSource","targetClassId","tableIdList","directed","sourceEdgeClass","targetEdgeClass","connectToNodeClass","otherNodeClass","otherAttribute","thisHash","otherHash","connectedTable","newEdgeClass","connectToEdgeClass","nodeClass","newNodeClass","connectedClasses","disconnectSource","disconnectTarget","edgeClassId","EdgeWrapper","sourceNodes","sourceTableId","targetNodes","targetTableId","EdgeClass","_splitTableIdList","otherClass","nodeTableIdList","edgeTableId","edgeTableIdList","staticExists","tableDistances","startsWith","dist","Math","abs","filter","sort","a","b","sourceClass","targetClass","side","connectSource","connectTarget","toggleDirection","swappedDirection","nodeAttribute","edgeAttribute","edgeHash","nodeHash","unshift","existingSourceClass","existingTargetClass","DATALIB_FORMATS","NEXT_CLASS_ID","NEXT_TABLE_ID","NetworkModel","origraph","modelId","hydrate","CLASSES","TABLES","_saveTimeout","save","unsaved","rawObject","TYPES","selector","addFileAsStaticTable","fileObj","encoding","mime","charset","extensionOverride","skipSizeCheck","fileMB","size","console","warn","text","reader","FileReader","onload","readAsText","addStringAsStaticTable","extension","datalib","read","columns","addStaticTable","Array","deleteAllUnusedTables","getNetworkModelGraph","includeDummies","edgeClasses","graph","classLookup","classConnections","classList","classSpec","id","classID","source","target","location","dummy","nodes","getTableDependencyGraph","tableLookup","tableLinks","tableLinkLookup","tableList","tableSpec","createFullSchemaGraph","NEXT_MODEL_ID","Origraph","localStorage","plugins","models","existingModels","getItem","JSON","parse","_currentModelId","registerPlugin","plugin","setItem","stringify","closeCurrentModel","currentModel","createModel","deleteModel","currentModelId","deleteAllModels","version","pkg"],"mappings":"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"}